C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\template\main.o
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe .\USER\MAIN.C PRINT(.\build\template\main.lst) OMF2 TABS(4) CODE NOCOND 
                    -SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(C:\Keil_v5\C51\INC\STC;C:\Keil_v5\C51\INC) DEFINE(__UVISION_VERSION=52
                    -6) OBJECT(.\build\template\main.o)

line level    source

   1          
   2          #include "STC8A8K64D4.h"
   3          
   4          #include "alib.h"
   5          #include "LCD1602.h"
   6          #include <stdio.h>
   7          #include "MatrixKey.h"
   8          
   9          uint8_t main_key_num = 0;
  10          char input_ascii=0;
  11          
  12          uint8_t num_line=0;  //当前数字在第一行还是第二行的flag
  13          uint8_t operator =' ';
  14          
  15          
  16          uint16_t line1_num=0;
  17          uint16_t line2_num=0;
  18          uint16_t result=0;
  19          /*
  20          做一个矩阵键盘计算器：
  21                789+
  22                456-
  23                123*
  24                0B=/
  25          
  26                其中的B是复位，懒得做退格键了。。反正就5位
  27          */
  28          
  29          uint8_t convert_key_to_ascii(uint8_t key){
  30   1        switch (key)
  31   1        {
  32   2        case 1:return '7';
  33   2        case 2:return '8';
  34   2        case 3:return '9';
  35   2        case 4:return '+';
  36   2        case 5:return '4';
  37   2        case 6:return '5';
  38   2        case 7:return '6';
  39   2        case 8:return '-';
  40   2        case 9:return '1';
  41   2        case 10:return '2';
  42   2        case 11:return '3';
  43   2        case 12:return '*';
  44   2        case 13:return '0';
  45   2        case 14:return '\b';
  46   2        case 15:return '=';
  47   2        case 16:return '/';
  48   2        
  49   2        default:
  50   2          return 0;
  51   2        }
  52   1      }
  53          
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 2   

  54          void calc_result(){
  55   1        switch (operator)
  56   1        {
  57   2        case '+':
  58   2          result=line1_num+line2_num;
  59   2          break;
  60   2        case '-':
  61   2          result=line1_num-line2_num;
  62   2          break;
  63   2        case '*':
  64   2          result=line1_num*line2_num;
  65   2          break;
  66   2        case '/':
  67   2          result=line1_num/line2_num;
  68   2          break;
  69   2        default:
  70   2          break;
  71   2        }
  72   1        LCD_ShowChar(2,7,'=');
  73   1        LCD_ShowNum(2,8,result,5);
  74   1      
  75   1      }
  76          
  77          void main()
  78          {
  79   1        init_all_gpio_to_std8051_status();
  80   1        LCD_Init();
  81   1        Delay_ms(10);
  82   1        LCD_ShowNum(1,1,line1_num,5);
  83   1        LCD_ShowNum(2,1,line2_num,5);
  84   1        while (1)
  85   1        {
  86   2          main_key_num=Get_key_num() ;
  87   2          if (!main_key_num) 
  88   2            continue; //如果没有输入，重新获取
  89   2          
  90   2          switch (convert_key_to_ascii(main_key_num))
  91   2          {
  92   3      
  93   3          case '+':
  94   3            operator='+';
  95   3            num_line=1;
  96   3            break;
  97   3          case '-':
  98   3            operator='-';
  99   3            num_line=1;
 100   3            break;
 101   3          case '*':
 102   3            operator='*';
 103   3            num_line=1;
 104   3            break;
 105   3          case '/':
 106   3            operator='/';
 107   3            num_line=1;
 108   3            break;
 109   3          case '=':
 110   3            calc_result();
 111   3            break;
 112   3          case '\b':
 113   3            IAP_CONTR=1<<5; //根据数据手册，写ISP_CONTR的B5, SWRST寄存器 可以实现软件复位
 114   3            break;
 115   3          
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 3   

 116   3          
 117   3          default:
 118   3          if (num_line==0)
 119   3          line1_num=line1_num*10 +(convert_key_to_ascii(main_key_num)-48); //(main_key_num-48) 是ascii数字转
             -十进制数字的差距
 120   3          else
 121   3          line2_num=line2_num*10 +(convert_key_to_ascii(main_key_num)-48); 
 122   3            break;
 123   3          }
 124   2      
 125   2          LCD_ShowNum(1,1,line1_num,5);
 126   2          LCD_ShowNum(2,1,line2_num,5);
 127   2          LCD_ShowChar(1,8,operator);
 128   2            
 129   2        }
 130   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION init_all_gpio_to_std8051_status (BEGIN)
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
                                           ; SOURCE LINE # 10
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 11
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 12
0005 F592              MOV     P1M0,A
                                           ; SOURCE LINE # 13
0007 F591              MOV     P1M1,A
                                           ; SOURCE LINE # 14
0009 F596              MOV     P2M0,A
                                           ; SOURCE LINE # 15
000B F595              MOV     P2M1,A
                                           ; SOURCE LINE # 16
000D F5B2              MOV     P3M0,A
                                           ; SOURCE LINE # 17
000F F5B1              MOV     P3M1,A
                                           ; SOURCE LINE # 18
0011 F5B4              MOV     P4M0,A
                                           ; SOURCE LINE # 19
0013 F5B3              MOV     P4M1,A
                                           ; SOURCE LINE # 20
0015 F5CA              MOV     P5M0,A
                                           ; SOURCE LINE # 21
0017 F5C9              MOV     P5M1,A
                                           ; SOURCE LINE # 22
0019 F5CC              MOV     P6M0,A
                                           ; SOURCE LINE # 23
001B F5CB              MOV     P6M1,A
                                           ; SOURCE LINE # 24
001D F5E2              MOV     P7M0,A
                                           ; SOURCE LINE # 25
001F F5E1              MOV     P7M1,A
                                           ; SOURCE LINE # 26
0021 22                RET     
             ; FUNCTION init_all_gpio_to_std8051_status (END)

             ; FUNCTION L?0106 (BEGIN)
0000         L?0107:
0000 7F64              MOV     R7,#064H
0002 7E00              MOV     R6,#00H
             ; FUNCTION _Delay_ms (BEGIN)
                                           ; SOURCE LINE # 28
;---- Variable 'xms' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 29
0004         ?C0002:
                                           ; SOURCE LINE # 31
0004 EF                MOV     A,R7
0005 1F                DEC     R7
0006 AC06              MOV     R4,AR6
0008 7001              JNZ     ?C0099
000A 1E                DEC     R6
000B         ?C0099:
000B 4C                ORL     A,R4
000C 600A              JZ      ?C0009
                                           ; SOURCE LINE # 32
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 5   

                                           ; SOURCE LINE # 35
;---- Variable 'i' assigned to Register 'R5' ----
000E 7D3C              MOV     R5,#03CH
                                           ; SOURCE LINE # 36
;---- Variable 'j' assigned to Register 'R4' ----
0010 7C93              MOV     R4,#093H
                                           ; SOURCE LINE # 38
0012         ?C0007:
                                           ; SOURCE LINE # 39
0012 DCFE              DJNZ    R4,?C0007
                                           ; SOURCE LINE # 41
0014 DDFC              DJNZ    R5,?C0007
                                           ; SOURCE LINE # 43
0016 80EC              SJMP    ?C0002
                                           ; SOURCE LINE # 44
0018         ?C0009:
0018 22                RET     
             ; FUNCTION _Delay_ms (END)

             ; FUNCTION Get_key_num (BEGIN)
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 12
                                           ; SOURCE LINE # 13
;---- Variable 'key_num' assigned to Register 'R3' ----
0000 E4                CLR     A
0001 FB                MOV     R3,A
                                           ; SOURCE LINE # 15
0002 7580FE            MOV     P0,#0FEH
                                           ; SOURCE LINE # 16
0005 20840E            JB      P04,?C0010
0008 7F64              MOV     R7,#064H
000A FE                MOV     R6,A
000B 120000      R     LCALL   _Delay_ms
000E         ?C0011:
000E 3084FD            JNB     P04,?C0011
0011 120000      R     LCALL   L?0106
0014 7B01              MOV     R3,#01H
0016         ?C0010:
                                           ; SOURCE LINE # 17
0016 20850B            JB      P05,?C0013
0019 120000      R     LCALL   L?0106
001C         ?C0014:
001C 3085FD            JNB     P05,?C0014
001F 120000      R     LCALL   L?0107
0022 7B0E              MOV     R3,#0EH
0024         ?C0013:
                                           ; SOURCE LINE # 18
0024 20860B            JB      P06,?C0016
0027 120000      R     LCALL   L?0107
002A         ?C0017:
002A 3086FD            JNB     P06,?C0017
002D 120000      R     LCALL   L?0107
0030 7B0F              MOV     R3,#0FH
0032         ?C0016:
                                           ; SOURCE LINE # 19
0032 20870B            JB      P07,?C0019
0035 120000      R     LCALL   L?0107
0038         ?C0020:
0038 3087FD            JNB     P07,?C0020
003B 120000      R     LCALL   L?0107
003E 7B10              MOV     R3,#010H
0040         ?C0019:
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 6   

                                           ; SOURCE LINE # 20
0040 7580FD            MOV     P0,#0FDH
                                           ; SOURCE LINE # 21
0043 20840B            JB      P04,?C0022
0046 120000      R     LCALL   L?0107
0049         ?C0023:
0049 3084FD            JNB     P04,?C0023
004C 120000      R     LCALL   L?0107
004F 7B0D              MOV     R3,#0DH
0051         ?C0022:
                                           ; SOURCE LINE # 22
0051 20850B            JB      P05,?C0025
0054 120000      R     LCALL   L?0107
0057         ?C0026:
0057 3085FD            JNB     P05,?C0026
005A 120000      R     LCALL   L?0107
005D 7B0A              MOV     R3,#0AH
005F         ?C0025:
                                           ; SOURCE LINE # 23
005F 20860B            JB      P06,?C0028
0062 120000      R     LCALL   L?0107
0065         ?C0029:
0065 3086FD            JNB     P06,?C0029
0068 120000      R     LCALL   L?0107
006B 7B0B              MOV     R3,#0BH
006D         ?C0028:
                                           ; SOURCE LINE # 24
006D 20870B            JB      P07,?C0031
0070 120000      R     LCALL   L?0107
0073         ?C0032:
0073 3087FD            JNB     P07,?C0032
0076 120000      R     LCALL   L?0107
0079 7B0C              MOV     R3,#0CH
007B         ?C0031:
                                           ; SOURCE LINE # 25
007B 7580FB            MOV     P0,#0FBH
                                           ; SOURCE LINE # 26
007E 20840B            JB      P04,?C0034
0081 120000      R     LCALL   L?0107
0084         ?C0035:
0084 3084FD            JNB     P04,?C0035
0087 120000      R     LCALL   L?0107
008A 7B09              MOV     R3,#09H
008C         ?C0034:
                                           ; SOURCE LINE # 27
008C 20850B            JB      P05,?C0037
008F 120000      R     LCALL   L?0107
0092         ?C0038:
0092 3085FD            JNB     P05,?C0038
0095 120000      R     LCALL   L?0107
0098 7B06              MOV     R3,#06H
009A         ?C0037:
                                           ; SOURCE LINE # 28
009A 20860B            JB      P06,?C0040
009D 120000      R     LCALL   L?0107
00A0         ?C0041:
00A0 3086FD            JNB     P06,?C0041
00A3 120000      R     LCALL   L?0107
00A6 7B07              MOV     R3,#07H
00A8         ?C0040:
                                           ; SOURCE LINE # 29
00A8 20870B            JB      P07,?C0043
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 7   

00AB 120000      R     LCALL   L?0107
00AE         ?C0044:
00AE 3087FD            JNB     P07,?C0044
00B1 120000      R     LCALL   L?0107
00B4 7B08              MOV     R3,#08H
00B6         ?C0043:
                                           ; SOURCE LINE # 30
00B6 7580F7            MOV     P0,#0F7H
                                           ; SOURCE LINE # 31
00B9 20840B            JB      P04,?C0046
00BC 120000      R     LCALL   L?0107
00BF         ?C0047:
00BF 3084FD            JNB     P04,?C0047
00C2 120000      R     LCALL   L?0107
00C5 7B05              MOV     R3,#05H
00C7         ?C0046:
                                           ; SOURCE LINE # 32
00C7 20850B            JB      P05,?C0049
00CA 120000      R     LCALL   L?0107
00CD         ?C0050:
00CD 3085FD            JNB     P05,?C0050
00D0 120000      R     LCALL   L?0107
00D3 7B02              MOV     R3,#02H
00D5         ?C0049:
                                           ; SOURCE LINE # 33
00D5 20860B            JB      P06,?C0052
00D8 120000      R     LCALL   L?0107
00DB         ?C0053:
00DB 3086FD            JNB     P06,?C0053
00DE 120000      R     LCALL   L?0107
00E1 7B03              MOV     R3,#03H
00E3         ?C0052:
                                           ; SOURCE LINE # 34
00E3 20870B            JB      P07,?C0055
00E6 120000      R     LCALL   L?0107
00E9         ?C0056:
00E9 3087FD            JNB     P07,?C0056
00EC 120000      R     LCALL   L?0107
00EF 7B04              MOV     R3,#04H
00F1         ?C0055:
                                           ; SOURCE LINE # 36
00F1 AF03              MOV     R7,AR3
                                           ; SOURCE LINE # 37
00F3 22                RET     
             ; FUNCTION Get_key_num (END)

             ; FUNCTION _convert_key_to_ascii (BEGIN)
                                           ; SOURCE LINE # 29
;---- Variable 'key' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 30
0000 EF                MOV     A,R7
0001 14                DEC     A
0002 B41000            CJNE    A,#010H,?C0100
0005         ?C0100:
0005 506E              JNC     ?C0077
0007 900000      R     MOV     DPTR,#?C0101
000A 75F003            MOV     B,#03H
000D A4                MUL     AB
000E C583              XCH     A,DPH
0010 25F0              ADD     A,B
0012 C583              XCH     A,DPH
0014 73                JMP     @A+DPTR
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 8   

0015         ?C0101:
0015 020000      R     LJMP    ?C0060
0018 020000      R     LJMP    ?C0062
001B 020000      R     LJMP    ?C0063
001E 020000      R     LJMP    ?C0064
0021 020000      R     LJMP    ?C0065
0024 020000      R     LJMP    ?C0066
0027 020000      R     LJMP    ?C0067
002A 020000      R     LJMP    ?C0068
002D 020000      R     LJMP    ?C0069
0030 020000      R     LJMP    ?C0070
0033 020000      R     LJMP    ?C0071
0036 020000      R     LJMP    ?C0072
0039 020000      R     LJMP    ?C0073
003C 020000      R     LJMP    ?C0074
003F 020000      R     LJMP    ?C0075
0042 020000      R     LJMP    ?C0076
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0045         ?C0060:
0045 7F37              MOV     R7,#037H
0047 22                RET     
                                           ; SOURCE LINE # 33
0048         ?C0062:
0048 7F38              MOV     R7,#038H
004A 22                RET     
                                           ; SOURCE LINE # 34
004B         ?C0063:
004B 7F39              MOV     R7,#039H
004D 22                RET     
                                           ; SOURCE LINE # 35
004E         ?C0064:
004E 7F2B              MOV     R7,#02BH
0050 22                RET     
                                           ; SOURCE LINE # 36
0051         ?C0065:
0051 7F34              MOV     R7,#034H
0053 22                RET     
                                           ; SOURCE LINE # 37
0054         ?C0066:
0054 7F35              MOV     R7,#035H
0056 22                RET     
                                           ; SOURCE LINE # 38
0057         ?C0067:
0057 7F36              MOV     R7,#036H
0059 22                RET     
                                           ; SOURCE LINE # 39
005A         ?C0068:
005A 7F2D              MOV     R7,#02DH
005C 22                RET     
                                           ; SOURCE LINE # 40
005D         ?C0069:
005D 7F31              MOV     R7,#031H
005F 22                RET     
                                           ; SOURCE LINE # 41
0060         ?C0070:
0060 7F32              MOV     R7,#032H
0062 22                RET     
                                           ; SOURCE LINE # 42
0063         ?C0071:
0063 7F33              MOV     R7,#033H
0065 22                RET     
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 9   

                                           ; SOURCE LINE # 43
0066         ?C0072:
0066 7F2A              MOV     R7,#02AH
0068 22                RET     
                                           ; SOURCE LINE # 44
0069         ?C0073:
0069 7F30              MOV     R7,#030H
006B 22                RET     
                                           ; SOURCE LINE # 45
006C         ?C0074:
006C 7F08              MOV     R7,#08H
006E 22                RET     
                                           ; SOURCE LINE # 46
006F         ?C0075:
006F 7F3D              MOV     R7,#03DH
0071 22                RET     
                                           ; SOURCE LINE # 47
0072         ?C0076:
0072 7F2F              MOV     R7,#02FH
0074 22                RET     
                                           ; SOURCE LINE # 49
0075         ?C0077:
                                           ; SOURCE LINE # 50
0075 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0077         ?C0061:
0077 22                RET     
             ; FUNCTION _convert_key_to_ascii (END)

             ; FUNCTION calc_result (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
0000 E500        R     MOV     A,operator
0002 24D6              ADD     A,#0D6H
0004 6029              JZ      ?C0081
0006 24FD              ADD     A,#0FDH
0008 6016              JZ      ?C0080
000A 24FE              ADD     A,#0FEH
000C 602E              JZ      ?C0082
000E 2404              ADD     A,#04H
0010 7039              JNZ     ?C0078
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0012         ?C0079:
                                           ; SOURCE LINE # 58
0012 E500        R     MOV     A,line1_num+01H
0014 2500        R     ADD     A,line2_num+01H
0016 F500        R     MOV     result+01H,A
0018 E500        R     MOV     A,line1_num
001A 3500        R     ADDC    A,line2_num
001C F500        R     MOV     result,A
                                           ; SOURCE LINE # 59
001E 802B              SJMP    ?C0078
                                           ; SOURCE LINE # 60
0020         ?C0080:
                                           ; SOURCE LINE # 61
0020 C3                CLR     C
0021 E500        R     MOV     A,line1_num+01H
0023 9500        R     SUBB    A,line2_num+01H
0025 F500        R     MOV     result+01H,A
0027 E500        R     MOV     A,line1_num
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 10  

0029 9500        R     SUBB    A,line2_num
002B F500        R     MOV     result,A
                                           ; SOURCE LINE # 62
002D 801C              SJMP    ?C0078
                                           ; SOURCE LINE # 63
002F         ?C0081:
                                           ; SOURCE LINE # 64
002F AC00        R     MOV     R4,line2_num
0031 AD00        R     MOV     R5,line2_num+01H
0033 AE00        R     MOV     R6,line1_num
0035 AF00        R     MOV     R7,line1_num+01H
0037 120000      E     LCALL   ?C?IMUL
                                           ; SOURCE LINE # 65
003A 800B              SJMP    ?C0102
                                           ; SOURCE LINE # 66
003C         ?C0082:
                                           ; SOURCE LINE # 67
003C AC00        R     MOV     R4,line2_num
003E AD00        R     MOV     R5,line2_num+01H
0040 AE00        R     MOV     R6,line1_num
0042 AF00        R     MOV     R7,line1_num+01H
0044 120000      E     LCALL   ?C?UIDIV
0047         ?C0102:
0047 8E00        R     MOV     result,R6
0049 8F00        R     MOV     result+01H,R7
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
004B         ?C0078:
                                           ; SOURCE LINE # 72
004B 7B3D              MOV     R3,#03DH
004D 7D07              MOV     R5,#07H
004F 7F02              MOV     R7,#02H
0051 120000      E     LCALL   _LCD_ShowChar
                                           ; SOURCE LINE # 73
0054 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
0057 AB00        R     MOV     R3,result+01H
0059 AA00        R     MOV     R2,result
005B 7D08              MOV     R5,#08H
005D 7F02              MOV     R7,#02H
005F 020000      E     LJMP    _LCD_ShowNum
             ; FUNCTION calc_result (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0000 120000      R     LCALL   init_all_gpio_to_std8051_status
                                           ; SOURCE LINE # 80
0003 120000      E     LCALL   LCD_Init
                                           ; SOURCE LINE # 81
0006 7F0A              MOV     R7,#0AH
0008 7E00              MOV     R6,#00H
000A 120000      R     LCALL   _Delay_ms
                                           ; SOURCE LINE # 82
000D 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
0010 AB00        R     MOV     R3,line1_num+01H
0012 AA00        R     MOV     R2,line1_num
0014 7D01              MOV     R5,#01H
0016 7F01              MOV     R7,#01H
0018 120000      E     LCALL   _LCD_ShowNum
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 11  

                                           ; SOURCE LINE # 83
001B 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
001E AB00        R     MOV     R3,line2_num+01H
0020 AA00        R     MOV     R2,line2_num
0022 7D01              MOV     R5,#01H
0024 7F02              MOV     R7,#02H
0026 120000      E     LCALL   _LCD_ShowNum
0029         ?C0085:
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0029 120000      R     LCALL   Get_key_num
002C 8F00        R     MOV     main_key_num,R7
                                           ; SOURCE LINE # 87
002E E500        R     MOV     A,main_key_num
0030 60F7              JZ      ?C0085
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 90
0032 120000      R     LCALL   _convert_key_to_ascii
0035 EF                MOV     A,R7
0036 24F8              ADD     A,#0F8H
0038 6030              JZ      ?C0094
003A 24DE              ADD     A,#0DEH
003C 601A              JZ      ?C0091
003E 24FD              ADD     A,#0FDH
0040 6011              JZ      ?C0090
0042 24FE              ADD     A,#0FEH
0044 6017              JZ      ?C0092
0046 24F2              ADD     A,#0F2H
0048 601B              JZ      ?C0093
004A 2412              ADD     A,#012H
004C 7021              JNZ     ?C0095
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 93
004E         ?C0089:
                                           ; SOURCE LINE # 94
004E 75002B      R     MOV     operator,#02BH
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
0051 800D              SJMP    ?C0105
                                           ; SOURCE LINE # 97
0053         ?C0090:
                                           ; SOURCE LINE # 98
0053 75002D      R     MOV     operator,#02DH
                                           ; SOURCE LINE # 99
0056         ?C0103:
                                           ; SOURCE LINE # 100
0056 8008              SJMP    ?C0105
                                           ; SOURCE LINE # 101
0058         ?C0091:
                                           ; SOURCE LINE # 102
0058 75002A      R     MOV     operator,#02AH
                                           ; SOURCE LINE # 103
005B         ?C0104:
                                           ; SOURCE LINE # 104
005B 8003              SJMP    ?C0105
                                           ; SOURCE LINE # 105
005D         ?C0092:
                                           ; SOURCE LINE # 106
005D 75002F      R     MOV     operator,#02FH
                                           ; SOURCE LINE # 107
0060         ?C0105:
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 12  

0060 750001      R     MOV     num_line,#01H
                                           ; SOURCE LINE # 108
0063 804E              SJMP    ?C0088
                                           ; SOURCE LINE # 109
0065         ?C0093:
                                           ; SOURCE LINE # 110
0065 120000      R     LCALL   calc_result
                                           ; SOURCE LINE # 111
0068 8049              SJMP    ?C0088
                                           ; SOURCE LINE # 112
006A         ?C0094:
                                           ; SOURCE LINE # 113
006A 75C720            MOV     IAP_CONTR,#020H
                                           ; SOURCE LINE # 114
006D 8044              SJMP    ?C0088
                                           ; SOURCE LINE # 117
006F         ?C0095:
                                           ; SOURCE LINE # 118
006F E500        R     MOV     A,num_line
0071 AF00        R     MOV     R7,main_key_num
0073 7020              JNZ     ?C0096
                                           ; SOURCE LINE # 119
0075 120000      R     LCALL   _convert_key_to_ascii
0078 EF                MOV     A,R7
0079 24D0              ADD     A,#0D0H
007B FB                MOV     R3,A
007C E4                CLR     A
007D 34FF              ADDC    A,#0FFH
007F FA                MOV     R2,A
0080 AE00        R     MOV     R6,line1_num
0082 AF00        R     MOV     R7,line1_num+01H
0084 7C00              MOV     R4,#00H
0086 7D0A              MOV     R5,#0AH
0088 120000      E     LCALL   ?C?IMUL
008B EF                MOV     A,R7
008C 2B                ADD     A,R3
008D F500        R     MOV     line1_num+01H,A
008F EE                MOV     A,R6
0090 3A                ADDC    A,R2
0091 F500        R     MOV     line1_num,A
0093 801E              SJMP    ?C0088
0095         ?C0096:
                                           ; SOURCE LINE # 121
0095 120000      R     LCALL   _convert_key_to_ascii
0098 EF                MOV     A,R7
0099 24D0              ADD     A,#0D0H
009B FB                MOV     R3,A
009C E4                CLR     A
009D 34FF              ADDC    A,#0FFH
009F FA                MOV     R2,A
00A0 AE00        R     MOV     R6,line2_num
00A2 AF00        R     MOV     R7,line2_num+01H
00A4 7C00              MOV     R4,#00H
00A6 7D0A              MOV     R5,#0AH
00A8 120000      E     LCALL   ?C?IMUL
00AB EF                MOV     A,R7
00AC 2B                ADD     A,R3
00AD F500        R     MOV     line2_num+01H,A
00AF EE                MOV     A,R6
00B0 3A                ADDC    A,R2
00B1 F500        R     MOV     line2_num,A
                                           ; SOURCE LINE # 122
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 13  

                                           ; SOURCE LINE # 123
00B3         ?C0088:
                                           ; SOURCE LINE # 125
00B3 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
00B6 AB00        R     MOV     R3,line1_num+01H
00B8 AA00        R     MOV     R2,line1_num
00BA 7D01              MOV     R5,#01H
00BC 7F01              MOV     R7,#01H
00BE 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 126
00C1 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
00C4 AB00        R     MOV     R3,line2_num+01H
00C6 AA00        R     MOV     R2,line2_num
00C8 7D01              MOV     R5,#01H
00CA 7F02              MOV     R7,#02H
00CC 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 127
00CF AB00        R     MOV     R3,operator
00D1 7D08              MOV     R5,#08H
00D3 7F01              MOV     R7,#01H
00D5 120000      E     LCALL   _LCD_ShowChar
                                           ; SOURCE LINE # 129
00D8 020000      R     LJMP    ?C0085
             ; FUNCTION main (END)

C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 14  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


Get_key_num. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  key_num. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CCF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
P0M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0093H  1
P1M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0092H  1
CCF3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DBH  1
P2M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0096H  1
P1M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P3M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
P2M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P4M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B4H  1
P3M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P5M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
P4M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B3H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
WKTCH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ABH  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P6M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
P5M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
main_key_num . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
P7M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
P6M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
P5 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
P6 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
P7M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
P7 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
WKTCL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AAH  1
SPCTL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CEH  1
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
CF . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
_LCD_ShowNum . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
CH . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F9H  1
P_SW1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
P_SW2. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BAH  1
line1_num. . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0001H  2
DPH1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
EADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
line2_num. . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0003H  2
CL . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E9H  1
IAP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
CCAP0H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FAH  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CCAP1H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FBH  1
DPL1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
CCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FCH  1
ADC_RES. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BDH  1
IP2H . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B6H  1
IP3H . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EEH  1
CCAP0L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EAH  1
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 15  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
TA . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AEH  1
CCAP1L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EBH  1
CCAPM0 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DAH  1
CCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ECH  1
CCAPM1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DBH  1
INTCLKO. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008FH  1
CCAPM2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DCH  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
calc_result. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
PADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
ADCCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DEH  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
input_ascii. . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     0005H  1
IAP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C3H  1
result . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0006H  2
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
CMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D9H  1
CCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
IAP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
PPCA . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BFH  1
LIRTRIM. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009EH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
CMPCR1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
CMPCR2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
ELVD . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
init_all_gpio_to_std8051_status. . . .  PUBLIC   CODE   PROC     0000H  -----
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
ADC_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
_Delay_ms. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0004H  -----
  xms. . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
IAP_TPS. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F5H  1
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
P50. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
P60. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
P51. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
P70. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
P61. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P52. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
PLVD . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P71. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
P62. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P53. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P72. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FAH  1
P63. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P54. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P73. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FBH  1
P64. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
P55. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P74. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FCH  1
P65. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
P56. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
P47. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
P75. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FDH  1
P66. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
P57. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
P76. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FEH  1
P67. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
P77. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FFH  1
BUS_SPEED. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A1H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
IE2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IAP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
PWMCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F6H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
LCD_Init . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
RSTCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FFH  1
IP2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B5H  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
IP3. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
T2H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D6H  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
T3H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D4H  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
T4H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D2H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
T2L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
T3L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D5H  1
T4L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D3H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
IAP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C2H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
_LCD_ShowChar. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C1H  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
IRTRIM . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009FH  1
PCA_PWM0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F2H  1
PCA_PWM1 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
num_line . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0008H  1
PCA_PWM2 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F4H  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
T4T3M. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D1H  1
ADC_RESL . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
SPSTAT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
IPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
_convert_key_to_ascii. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  key. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2021 20:06:35 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PWMSET . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F1H  1
S2BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
S3BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ADH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
S4BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0085H  1
S2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
DPS. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
S3CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ACH  1
S4CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0084H  1
AUXINTIF . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EFH  1
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
operator . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0009H  1
IAP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
IRCBAND. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009DH  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
CCF0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
CCF1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1
SPDAT. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CFH  1
P0M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0094H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    740    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
